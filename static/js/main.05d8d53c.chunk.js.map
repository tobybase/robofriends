{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","Searchfield","target","value","state","fetch","then","respose","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACA,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,mCAAiCH,EAAjC,cACnB,gCACA,6BAAKF,IACL,4BAAIC,WCcQK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEOA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEAR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZS,SCKJC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACG,uBACSA,UAAU,mCACjBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCFI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCJ,EAAMK,YCyCMC,G,wDAtCb,aAAe,IAAD,8BACf,gBAaCC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb5C,EAAKC,MAAQ,CACZxB,OAAQ,GACRqB,YAAa,IAJC,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAO,OAAGA,EAAQC,UACvBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBAOxC,WAAU,IAAD,SACwBC,KAAKN,MAA7BxB,EADA,EACAA,OACH+B,GAFG,EACQV,YACMrB,EAAOgC,QAAO,SAAAhC,GAClC,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,mBAElE,OAAQjC,EAAOmC,OAGjB,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ+B,SANlB,6C,GAzBaK,cCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDX,M","file":"static/js/main.05d8d53c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t <img alt='robot' src = { `https://robohash.org/test${id}?200x200`}/> \n\t  <div>\n\t\t <h2>{name}</h2>\n\t\t <p>{email}</p>\n\t  </div>\n\t</div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn(\n\t\t<div>\n\t  \t\t{\n\t  \t\t    robots.map((user, i) => {\n\t  \t\t  \t  return (\n\t  \t\t  \t   \t<Card\n\t  \t\t  \t   \tkey = {i}\n\t  \t\t  \t   \tid = {robots[i].id}\n\t  \t\t  \t   \tname = {robots[i].name}\n\t  \t\t  \t   \temail = {robots[i].email}\n\t  \t\t  \t   \t/>\n\t  \t\t  \t);\n\t  \t\t })\n\t  \t\t}\n  \t\t</div>\n\t)\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t  \t\t<input\n              className='pa3 ba b--green bg-lightest-blue'\n\t  \t\t  type='search' \n\t  \t\t  placeholder='search robots' \n\t  \t\t  onChange={searchChange}\n\t  \t\t\t/>\n\t  \t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '3px solid black', height: '600px'}}>\n\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\n// import { robots } from './robots';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n\tsuper()\n\tthis.state = {\n\t\trobots: [],\n\t\tSearchfield: ''\n\t}\n  }\n\n  componentDidMount() {\n  \tfetch('https://jsonplaceholder.typicode.com/users')\n  \t.then(respose=> respose.json())\n  \t.then(users => this.setState({ robots: users}));\n}\n\n  onSearchChange = (event) => {\n  \tthis.setState({ Searchfield: event.target.value })\n     }\n\n  render() {\n  \tconst { robots, Searchfield } = this.state;\n\t const filteredRobots = robots.filter(robots => {\n  \t  return robots.name.toLowerCase().includes(this.state.Searchfield.toLowerCase())\n  \t })\n  \t return !robots.length ?\n  \t \t<h1>Loading</h1> :\n  \t (\n\t\t<div className='tc'>\n\t\t\t <h1 className='f1'>Robofriends</h1>\n\t\t\t <SearchBox searchChange={this.onSearchChange}/>\n\t\t\t <Scroll>\n\t\t\t \t<CardList robots={filteredRobots} />\n\t\t\t </Scroll> \n\t\t</div>\n\t );\n    }\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport Tachyons from 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}